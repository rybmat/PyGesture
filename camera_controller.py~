import cv2
import numpy as np
import time

class track_hand:
	def __init__(self):
		pass
	def tracking(self,img1, img2, bb):
		hsv = cv2.cvtColor(img1, cv2.COLOR_BGR2HSV)
		hsv=hsv[:,:,0:1]
		mask = cv2.inRange(hsv, np.array((0.)), np.array((180.)))
		x0, y0, w, h = bb
		x1 = x0 + w -1
		y1 = y0 + h -1
		hsv_roi = hsv[y0:y1, x0:x1]
		mask_roi = mask[y0:y1, x0:x1]
		hist = cv2.calcHist( [hsv_roi], [0], mask_roi, [16], [0, 180] )
		cv2.normalize(hist, hist, 0, 255, cv2.NORM_MINMAX);
		hist_flat = hist.reshape(-1)
		prob = cv2.calcBackProject([hsv,cv2.cvtColor(img2, cv2.COLOR_BGR2HSV)], [0], hist_flat, [0, 180], 1)
		term_crit = ( cv2.TERM_CRITERIA_EPS |cv2.TERM_CRITERIA_COUNT, 10, 1 )
		new_ellipse, track_window = cv2.CamShift(prob, bb, term_crit)
		return track_window
	def face_track(self):
		cap = cv2.VideoCapture(0)
		cv2.namedWindow("Camera")
		#ret,img = cap.read()
		bb = (100,100,50,50) # get bounding box from some method
		if cap.isOpened():
			while True:
				ret,img1 = cap.read()
				if ret:
			#bb = self.tracking(img1, img, bb)
					img = img1
					cv2.imshow("Camera",img1)
